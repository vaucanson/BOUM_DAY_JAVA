/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.panel.popup;

import dao.BatchManager;
import entity.Model;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import model.StockUnderLimitTableModel;
import renderer.StockUnderLimitButtonRenderer;
import view.frame.popup.LaunchBatchWorkshopPopUpFrame;
import view.panel.StylePanel;

/**
 *
 * @author badaroux
 */
public class LaunchBatchWorkshopPopUpPanel extends StylePanel {

     private JFrame parent;
     private Model model;
     
    public LaunchBatchWorkshopPopUpPanel(JFrame frame) {
        this.initComponents();
        this.setVisible(true);
        this.parent = frame;
        
        // permet de faire appel au modèle ciblé par la JTab dans la frame précédente
        model = ((LaunchBatchWorkshopPopUpFrame) this.parent).getModel();       
        
        // renvoie le String donnant le nom du modèle ciblé
        labModel.setText(model.getName());                     
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labTitle = new javax.swing.JLabel();
        labModelTitle = new javax.swing.JLabel();
        labModel = new javax.swing.JLabel();
        labQuantityTitle = new javax.swing.JLabel();
        buttonCancel = new javax.swing.JButton();
        buttonValidate = new javax.swing.JButton();
        quantitySpinner = new javax.swing.JSpinner();

        labTitle.setText("Lancement d'un lot");

        labModelTitle.setText("Modèle");

        labQuantityTitle.setText("Quantité");

        buttonCancel.setText("Annuler");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        buttonValidate.setText("Valider");
        buttonValidate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonValidateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(199, 199, 199)
                .addComponent(labTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labModelTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labModel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonCancel)
                            .addComponent(labQuantityTitle))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(buttonValidate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(quantitySpinner))))
                .addGap(104, 104, 104))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(labTitle)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labModelTitle)
                    .addComponent(labModel))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labQuantityTitle)
                    .addComponent(quantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCancel)
                    .addComponent(buttonValidate))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
      
        // Demande de confirmation d'annulation pour éviter les fausses manipulations
        
        if (JOptionPane.showConfirmDialog(null,"Annuler le lancement de lot ? ", "", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
       {
          parent.dispose();
       }
       else
       {
           
       }
        
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void buttonValidateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonValidateActionPerformed
       
        
       if ((int)quantitySpinner.getValue() == 0)        // permet d'informer l'utilisateur qu'il ne peut lancer un lot de 0 pièces
       {
           JOptionPane.showMessageDialog(null, "Veuillez saisir une quantité.");
       }
       
       //demande de confirmation pour éviter les erreurs de manipulation
       else if (JOptionPane.showConfirmDialog(null,"Lancer le lot ? ", "", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
       {
          BatchManager.init(model, (int)quantitySpinner.getValue());
          JOptionPane.showMessageDialog(null, "Un lot contenant " + quantitySpinner.getValue() + " pièces de modèle " + model.getName() + " a bien été lancé.");
          parent.dispose();         
       }
       else
       {
           
       }
    }//GEN-LAST:event_buttonValidateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonValidate;
    private javax.swing.JLabel labModel;
    private javax.swing.JLabel labModelTitle;
    private javax.swing.JLabel labQuantityTitle;
    private javax.swing.JLabel labTitle;
    private javax.swing.JSpinner quantitySpinner;
    // End of variables declaration//GEN-END:variables
}
